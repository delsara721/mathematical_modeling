minindex:=proc(x,sN)    #function heading 
                       #min  will hold min value
                       #index will hold min index
                       #k: counter for loop
 local min,index,k;    
 min:=x[1];            #set min to first element
 index:=1;
 for k from 1 to sN do
                       #if current element is less than min
   if (x[k]<min) then
    index:=k;          #update index
    min:=x[k];         #update min
   fi;
 od; 
 return(index);      #return index
end;


with(stats):with(random):
mserver:=proc(n,sN)     #function heading
                        #s1:time for customer
                        #t1:current customer time
                        #S:Service Time
                        #T:New Customer arrival time
                        #W:Wait time
                        #average: average time                         
 local server, t1, S, T, W, i,j, IND, average; 
                        #intialize;t1,W,average
                        #make server array
 server:=arrays1(1..sN);
 for j from 1 to sN do  #intialize everything in server to 0 
   server[j]:=0;
 od;
 t1:=0;
 W:=0;
 average:=0;
 for i from 1 to n do
                        #generate T,S, increment t1
   T:=exponential[1]();
   S:=normald[8,3]();
   t1:=t1+T;
   IND:=minindex(server,sN);
   #print(IND);
                        #time for customer is less than current customer time
   if (server[IND]<t1) then        
     server[IND]:=t1+S;
   else                 #time for customer is greater(or equal) to current t1
                        #update wait time
     W:=W+(server[IND]-t1);  
                        #update server    
     server[IND]:=server[IND]+S;        
   fi;
 end;
 average:=W/n;          #calculate wait time
                        #printing output
 print(`The average waiting time is`);
 print (average);
end;
